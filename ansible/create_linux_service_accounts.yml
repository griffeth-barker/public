# SYNOPSIS
#   This playbook creates our standard set of service accounts for Linux servers.
# DESCRIPTION
#   This playbook checks for the existence of our standard set of service accounts for Linux
#   servers and creates them if missing.
# PARAMETER <Parameter_Name>
#   --extra-vars "svc_backups=*** svc_monitoring=*** svc_scanner=***"
# INPUTS
#   None
# OUTPUTS
#   None
# NOTES
#   Updated by:     Barker, Griffeth (barkergriffeth@gmail.com)
#   Change Date:    2023-10-09
#   Purpose/Change: Initial development
#
#   Be sure to pass the service account passwords as variables. Replace with info from your secrets manager as appropriate.
# EXAMPLE
#   ansible-playbook create_linux_service_accounts.yml -i your_inventory.yml --extra-vars "svc_backups_pass=*** svc_monitoring_pass=*** svc_scanner_pass=***" -u your_user -b
---
- name: Create standard service accounts for Linux servers
  hosts: all
  gather_facts: false
  become: true

  # Declare variables specific to this playbook
  vars:
    ansible_become: true
    ansible_become_method: sudo
    ansbile_become_password: "changeme"

  # Execute actions
  tasks:
    # Create the service account for the backup platform
    - name: Create backups service account
      ansible.builtin.user:
        name: svc_backups
        password: "{{ svc_backups | password_hash('sha512', 'salt') }}"
        comment: backups
        shell: /bin/bash
        groups: sudo
        append: yes
        state: present

    # Create the service account for the observability platform
    - name: Create observability service account
      ansible.builtin.user:
        name: svc_monitoring
        password: "{{ svc_monitoring | password_hash('sha512', 'salt') }}"
        comment: svc_monitoring
        shell: /bin/bash
        groups: sudo
        append: yes
        state: present

    # Create the service account for the vulnerabilitiy scanner
    - name: Create vulnerability scanner service account
      ansible.builtin.user:
        name: svc_scanner
        password: "{{ svc_scanner | password_hash('sha512', 'salt') }}"
        comment: svc_scanner
        shell: /bin/bash
        create_home: yes
        groups: sudo
        append: yes
        state: present

    # Optional push notification via ntfy.sh
    # This playbook was intended to be scheduled via Ansible Semaphore and so the
    # message to refer to the console for results is in reference to that. Because
    # it is more specific to my usage, I've left it commented out here.
    #- name: Send ntfy.sh push notification
    #  ansible.builtin.uri:
    #    url: https://ntfy.sh/changeme
    #    method: POST
    #    headers: 
    #      title: "☑️ Playbook completed a run"
    #    body: "The playbook to create the standard service accounts on Linux servers has completed a run. Please see the console for results."
...
